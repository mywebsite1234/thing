# This is a GitHub Actions workflow file.
# It defines an automated process that runs on GitHub's servers.

name: Website Mirror

# This allows you to run the workflow manually from the Actions tab
on:
  workflow_dispatch:
    inputs:
      url:
        description: 'The full URL of the website to mirror'
        required: true

jobs:
  mirror-and-package:
    # The job will run on a standard Ubuntu virtual machine provided by GitHub
    runs-on: ubuntu-latest

    steps:
      # Step 1: A standard checkout step (required for workflows)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Run wget to mirror the entire website
      - name: Mirror Website with Wget
        run: |
          # Use wget to create a full offline mirror of the site.
          # --user-agent: Pretends to be a regular browser to avoid being blocked.
          # --wait/--random-wait: Pauses between downloads to avoid triggering anti-bot measures.
          # --mirror: Enables options suitable for mirroring.
          # --convert-links: Converts links to work for local viewing.
          # --adjust-extension: Adds .html to filenames where needed.
          # --page-requisites: Downloads all assets like CSS, JS, and images.
          # --no-parent: Prevents wget from going to parent directories.
          # --execute robots=off: Ignores the website's robots.txt file.
          wget \
            --user-agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36" \
            --wait=2 \
            --random-wait \
            --mirror \
            --convert-links \
            --adjust-extension \
            --page-requisites \
            --no-parent \
            --execute robots=off \
            "${{ github.event.inputs.url }}"

      # Step 3: The downloaded files are saved in a folder named after the website's domain.
      # This step uploads that folder as an artifact.
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: website-mirror
          # Get the domain name from the URL to use as the path
          path: $(echo "${{ github.event.inputs.url }}" | sed -e 's|https://||' -e 's|http://||' -e 's|www.||' | cut -d/ -f1)

